<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- [y] hybris Platform
 
 Copyright (c) 2000-2016 SAP SE or an SAP affiliate company.
 All rights reserved.
 
 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
--><!-- All hybris buildcallbacks.xml macrodefinitions:
 
 Build/Documentation
 
	 before/after ant macro "clean"
		 <macrodef name="hybristoolsgui_before_clean"/>
		 <macrodef name="hybristoolsgui_after_clean"/>
	 
	 before/after ant macro "build"
		 <macrodef name="hybristoolsgui_before_build"/>
		 <macrodef name="hybristoolsgui_after_build"/>
		 
	 before/after ant macro "compile_core" - the core module of the extension
		 <macrodef name="hybristoolsgui_before_compile_core">
		 <macrodef name="hybristoolsgui_after_compile_core">
	 
	 before/after ant macro "compile_web" - the web module of the extension
		 <macrodef name="hybristoolsgui_before_compile_web" />
		 <macrodef name="hybristoolsgui_after_compile_web" />
	 
	 before/after ant macro "compile_hmc" - the hmc module of the extension
		 <macrodef name="hybristoolsgui_before_compile_hmc" />
		 <macrodef name="hybristoolsgui_after_compile_hmc" />
 
 Preparing extension
 
	 will be called in the beginning of the ant call and only once (also when using multiple 
	 ant targets e.g. ant build yunittest)	
		 <macrodef name="hybristoolsgui_only_once_prepare"/>
 
 Creating ear module/production
 
	 before/after ant macro "ear"
		 <macrodef name="hybristoolsgui_before_ear"/>
		 <macrodef name="hybristoolsgui_after_ear"/>

	 before/after ant macro "production" - for hybris server only
		 <macrodef name="hybristoolsgui_before_production" />
		 <macrodef name="hybristoolsgui_after_production" />
 
 JUnit Test
 
	 before/after ant macro "yunitinit" 
		 <macrodef name="hybristoolsgui_before_yunitinit" />
		 <macrodef name="hybristoolsgui_after_yunitinit" />
	 
	 before/after ant macro "yunit"
		 <macrodef name="hybristoolsgui_before_yunit" />
		 <macrodef name="hybristoolsgui_after_yunit" /> 
		 
 Distribution package
 
 	 before/after ant macro "dist" - internal target; only for use when platform is available in source code
		 <macrodef name="hybristoolsgui_after_dist"/>
		 <macrodef name="hybristoolsgui_before_dist"/>
	 
	 before/after ant macro "dist_copy" - internal target; only for use when platform is available in source code
		 <macrodef name="hybristoolsgui_before_dist_copy"/>
		 <macrodef name="hybristoolsgui_after_dist_copy"/>
 
--><project name="hybristoolsgui_buildcallbacks">
	
	<!-- 
	    Called whenever 'ant ear' is used. this callback can be used to modify the content of the ear file
	
	     ${ear.path}: 			path to ear
	 -->


	<macrodef name="toolsBowerBuild">
		<attribute name="path" default="NOT SET"/>
		<attribute name="phase" default="NOT SET"/>
		<attribute name="failonerror" default="NOT SET"/>
		<sequential>
			<echo message="START of calling bower @{phase} on @{path}"/>
			<property environment="env"/>

			<detectOS/>
			<property file="${ext.npmancillary.path}/resources/ant/${os.family}.properties" />


			<if>
				<equals arg1="${phase}" arg2="clean"/>
				<then>
					<removeLink path="@{path}${file.separator}node_modules" />
				</then>
			</if>
			<if>
				<!-- default value for fail on error -->
				<equals arg1="@{phase}" arg2="test_only" />
				<then>
					<property name="failonerrorDefault"  value="false"/>
				</then>
				<else>
					<property name="failonerrorDefault"  value="true"/>
				</else>
			</if>
			<if>
				<!-- use default if no other value was provided  -->
				<equals arg1="@{failonerror}" arg2="NOT SET" />
				<then>
					<property name="failonerrorValue"  value="${failonerrorDefault}"/>
				</then>
				<else>
					<property name="failonerrorValue"  value="@{failonerror}"/>
				</else>
			</if>
			<echo message="failonerror=@{failonerror}, default=${failonerrorDefault}, value=${failonerrorValue}" />

			<createNodeModulesSymlink path="@{path}"/>
			<cleanGruntBuildSymlinks/>
			<resetNpmPermissions/>
			<if>
				<os family="windows"/>
				<then>
					<echo message="Running bower @{phase}"/>
					<exec dir="@{path}" executable="${loc.NPM_BINARIES_HOME}\.bin\bower.cmd" failonerror="${failonerrorValue}">
						<env key="Path" value="${env.Path}${path.separator}${loc.EXTRA_PATH}"/>
						<env key="NPM_HOME" value="${loc.NPM_HOME}"/>
						<env key="NPM_BINARIES_HOME" value="${loc.NPM_BINARIES_HOME}"/>
						<env key="NODE_HOME" value="${loc.NODE_HOME}"/>

						<arg value="@{phase}"/>
					</exec>
				</then>
				<else>
					<echo message="Running bower @{phase}"/>
					<exec executable="chmod">
						<arg line="755 ${loc.NPM_HOME}/node_modules/bower/bin/bower"/>
					</exec>
					<exec dir="@{path}" executable="${loc.NPM_BINARIES_HOME}/.bin/bower" failonerror="${failonerrorValue}">
						<env key="PATH" value="${loc.EXTRA_PATH}${path.separator}${env.PATH}"/>
						<env key="NPM_HOME" value="${loc.NPM_HOME}"/>
						<env key="NPM_BINARIES_HOME" value="${loc.NPM_BINARIES_HOME}"/>
						<env key="NODE_HOME" value="${loc.NODE_HOME}"/>
						<arg value="@{phase}"/>
					</exec>
				</else>
			</if>
			<echo message="END of calling bower @{phase}"/>
		</sequential>
	</macrodef>

	<macrodef name="hybristoolsguiBuildCRX">
		<sequential>
			<echo message="*** Create CRX *** "/>
			<if>
				<os family="unix" />
				<then>
					<exec dir="${ext.hybristoolsgui.path}/web/webroot" executable="chromium-browser">
						<arg line="--pack-extension=./guieditor/"/>
					</exec>
				</then>
				<else>
					<exec dir="${ext.hybristoolsgui.path}/web/webroot" executable="cmd">
						<arg line="/c build_crx.bat"/>
					</exec>
				</else>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="hybristoolsgui_after_build">
		<sequential>
			<echo message="*** Load external libs *** "/>
			<toolsBowerBuild path="${ext.hybristoolsgui.path}/web/webroot/guieditor" phase="install"/>
			<if>
				<os family="unix" />
				<then>
					<exec dir="${ext.hybristoolsgui.path}/web/webroot/guieditor" executable="rm">
						<arg line="node_modules"/>
					</exec>
				</then>
			</if>
			<hybristoolsguiBuildCRX/>
		</sequential>
	</macrodef>
		
</project>
